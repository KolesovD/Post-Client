[
  {
    "Id": "261156",
    "ThreadId": "76410",
    "Html": "<p>Hi,</p>\r\n<p>i have tested today your Mime Parser and i am very pleased by your work.</p>\r\n<p>I just have found a little bug ( i guess ) about populating the To Mailadresscollection of the MailMessage.</p>\r\n<p>Take a look at:</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>            <span style=\"color:Blue\">if</span> (message.To.Count == 0 &amp;&amp; !<span style=\"color:Blue\">string</span>.IsNullOrEmpty(message.Headers[<span style=\"color:#A31515\">&quot;to&quot;</span>]))\r\n            {\r\n                <span style=\"color:Blue\">string</span>[] emails = message.Headers[<span style=\"color:#A31515\">&quot;to&quot;</span>].Split(<span style=\"color:#A31515\">','</span>);\r\n                <span style=\"color:Blue\">for</span> (<span style=\"color:Blue\">int</span> i = 0; i &lt; emails.Length; i++)\r\n                {\r\n                    MailAddress address = <span style=\"color:Blue\">null</span>;\r\n                    <span style=\"color:Blue\">try</span>\r\n                    {\r\n                        address = <span style=\"color:Blue\">new</span> MailAddress(emails[i]);\r\n                        message.CC.Add(address);\r\n                        <span style=\"color:Green\">// Should be:</span>\r\n                       <span style=\"color:Green\">// message.To.Add(address);</span>\r\n                    }\r\n                    <span style=\"color:Blue\">catch</span>\r\n                    {\r\n                        <span style=\"color:Blue\">try</span>\r\n                        {\r\n                            address = <span style=\"color:Blue\">new</span> MailAddress(emails[i] + <span style=\"color:#A31515\">&quot;,&quot;</span> + emails[i + 1]);\r\n                            i++;\r\n                            message.CC.Add(address);\r\n                            <span style=\"color:Green\">// Should be:</span>\r\n                            <span style=\"color:Green\">// message.To.Add(address);</span>\r\n                        }\r\n                        <span style=\"color:Blue\">catch</span>\r\n                        { }\r\n                    }\r\n                }\r\n            }\r\n</pre>\r\n</div>",
    "PostedDate": "2009-11-27T06:47:01.15-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "261363",
    "ThreadId": "76410",
    "Html": "\r\n<div>I'll take a look and adjust as necessary.  \r\nI've made a good number of changes since we last communicated...  \r\nAccommodating several new MIME types and such.  When I get a chance I'll \r\nzip it up and send it to you.</div>\r\n<div> </div>\r\n<div>Some of the changes may be specific to my needs, \r\nbut address some other items in general.  I had some issues with character \r\nsets, for instance...  You can poke through when I send you the \r\ncode.</div>\r\n<div> </div>\r\n<div>I look forward to even more refinements between the \r\ntwo of us.</div>\r\n<div> </div>\r\n<div>Jerry</div>\r\n<div style=\"font:10pt Tahoma\">\r\n<div><br></div>\r\n<div style=\"background:#f5f5f5\">\r\n<div style=\"font-color:black\"><b>From:</b> [email removed] </div>\r\n<div><b>Sent:</b> Saturday, November 28, 2009 1:22 PM</div>\r\n<div><b>To:</b> [email removed] </div>\r\n<div><b>Subject:</b> Populating the To MailAddressCollection \r\n[mimeParser:76410]</div></div></div>\r\n<div><br></div>\r\n\r\n\r\n<p>From: Heslacher</p>\r\n<div id=ThreadNotificationPostBody>\r\n<p>Hi,</p>\r\n<p>i have tested today your Mime Parser and i am very pleased by your work.</p>\r\n<p>I just have found a little bug ( i guess ) about populating the To \r\nMailadresscollection of the MailMessage.</p>\r\n<p>Take a look at:</p>\r\n<div style=\"background-color:white;color:black\"><pre>            <span style=\"color:blue\">if</span> (message.To.Count == 0 && !<span style=\"color:blue\">string</span>.IsNullOrEmpty(message.Headers[<span style=\"color:#a31515\">&quot;to&quot;</span>]))\r\n            {\r\n                <span style=\"color:blue\">string</span>[] emails = message.Headers[<span style=\"color:#a31515\">&quot;to&quot;</span>].Split(<span style=\"color:#a31515\">','</span>);\r\n                <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; emails.Length; i++)\r\n                {\r\n                    MailAddress address = <span style=\"color:blue\">null</span>;\r\n                    <span style=\"color:blue\">try</span>\r\n                    {\r\n                        address = <span style=\"color:blue\">new</span> MailAddress(emails[i]);\r\n                        message.CC.Add(address);\r\n                        <span style=\"color:green\">// Should be:</span>\r\n                       <span style=\"color:green\">// message.To.Add(address);</span>\r\n                    }\r\n                    <span style=\"color:blue\">catch</span>\r\n                    {\r\n                        <span style=\"color:blue\">try</span>\r\n                        {\r\n                            address = <span style=\"color:blue\">new</span> MailAddress(emails[i] + <span style=\"color:#a31515\">&quot;,&quot;</span> + emails[i + 1]);\r\n                            i++;\r\n                            message.CC.Add(address);\r\n                            <span style=\"color:green\">// Should be:</span>\r\n                            <span style=\"color:green\">// message.To.Add(address);</span>\r\n                        }\r\n                        <span style=\"color:blue\">catch</span>\r\n                        { }\r\n                    }\r\n                }\r\n            }\r\n</pre></div></div>\r\n",
    "PostedDate": "2009-11-28T11:13:27.437-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]